{"expireTime":9007200827529500000,"key":"transformer-remark-markdown-html-8b32f1a406d8c5c0a16907234e589acc-gatsby-remark-graphgatsby-remark-katexgatsby-remark-prismjs-","val":"<blockquote>\n<p>Organise a birthday party with <strong>48</strong> toys and <strong>42</strong> sweets.\nYou have to give away all the toys and sweets to the guests at the party.</p>\n</blockquote>\n<p>What is the highest number of guests that can be invited such that each guest gets the <strong>same amount</strong> of <strong>sweets and toys</strong>?</p>\n<h4>Greatest Common Divisor</h4>\n<p>The Greatest Common Divisor (GCD) of two or more integers, which are not all zero, is the largest positive integer that divides each of the integers (ref. <a href=\"https://en.wikipedia.org/wiki/Greatest_common_divisor\">Wikipedia</a>)</p>\n<ol>\n<li>Divide the larger number by the small one. In this case we divide 48 by 42 to get a quotient of 1 and remainder of 6.</li>\n<li>Next we divide the smaller number (i.e. 42) by the remainder from the last division (i.e. 6). So 42 divide by 6, we get a quotient of 7 and remainder of 0.</li>\n<li>Since we already get a remainder of zero, the last number that we used to divide is the GCD, i.e 6.</li>\n</ol>\n<h4>Algorithm</h4>\n<div class=\"mermaid\">graph TB\n    Start --> id1[Divide the larger number by the smaller number]\n    id1 --> id2{Is A or B equal to 0?}\n    id2 -- Yes --> End\n    id2 -- No --> Start</div>\n<h4>Code</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">gcd</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">===</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> b <span class=\"token operator\">===</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> b<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>b <span class=\"token operator\">></span> a<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> c <span class=\"token operator\">=</span> a<span class=\"token punctuation\">;</span>\n    a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n    b <span class=\"token operator\">=</span> c<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> a <span class=\"token operator\">%</span> b<span class=\"token punctuation\">;</span>\n  a <span class=\"token operator\">=</span> b<span class=\"token punctuation\">;</span>\n  b <span class=\"token operator\">=</span> result<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token keyword\">return</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// recurse</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 6</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">locals</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span>\n  <span class=\"token keyword\">if</span> a <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">or</span> b <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> b <span class=\"token operator\">></span> a<span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">return</span> b\n    <span class=\"token keyword\">return</span> a\n  <span class=\"token keyword\">if</span> b <span class=\"token operator\">></span> a<span class=\"token punctuation\">:</span>\n    c <span class=\"token operator\">=</span> <span class=\"token keyword\">as</span>\n    a <span class=\"token operator\">=</span> b\n    b <span class=\"token operator\">=</span> c\n  result <span class=\"token operator\">=</span> a <span class=\"token operator\">%</span> b\n  a <span class=\"token operator\">=</span> b\n  b <span class=\"token operator\">=</span> result\n  <span class=\"token keyword\">return</span> gcd<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>gcd<span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\"># 6</span></code></pre></div>"}